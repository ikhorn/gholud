/* Модуль статуса всей периферии
 * обновлен.....................................................................12.12.2010 13:07:23
*/

#include "pdef.h"

#ifndef STA_H_
#define STA_H_
/*//------------------------------------------------------------------------------
//типы
//------------------------------------------------------------------------------

typedef struct
{
	uint16_t iic:1;
	uint16_t mem:1;
	uint16_t tmp:2;
	uint16_t rtc:1;
} gSTA_;

extern gSTA_ gSta;

//------------------------------------------------------------------------------
//функции
//------------------------------------------------------------------------------

void sta_Ini(void);

#define STA_N(MOD, NUM)						SETB(gSta.##MOD, NUM);				//переводит модуль в нормальное состояние
#define STA_E(MOD, NUM)						CLRB(gSta.##MOD, NUM);				//переводит модуль в состояние ошибки
#define STA_IS_N(MOD, NUM)					CHKB(gSta.##MOD, NUM)				//проверяет состояние модуля
#define STA_IS_E(MOD, NUM)					(!CHKB(gSta.##MOD, NUM))			//проверяет состояние модуля
*/
//------------------------------------------------------------------------------
//типы
//------------------------------------------------------------------------------

#ifndef STA
#define STA
typedef uint8_t gsta_t;
#endif

extern gsta_t gSta;

#define STA_IIC						1
#define STA_MEM						2
#define STA_TMP_1					3
#define STA_TMP_2					4
#define STA_RTC						5

//------------------------------------------------------------------------------
//функции
//------------------------------------------------------------------------------

void sta_Ini(void);
#define STA_N(MOD)					SETB(gSta, MOD);							//переводит модуль в нормальное состояние
#define STA_E(MOD)					CLRMSK(gSta, MOD);							//переводит модуль в состояние ошибки
#define STA_IS_N(MOD)				CHKB(gSta, MOD)								//проверяет состояние модуля
#define STA_IS_E(MOD)				(!CHKB(gSta, MOD))							//проверяет состояние модуля

#endif

